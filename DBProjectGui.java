//Cameron Burton
//Dan RB

//Database Project part 2

//GUI Code generated with Net Beans

public class DBProjectGui extends javax.swing.JFrame {

    /**
     * Creates new form DBProjectGui
     */
    public DBProjectGui() {
        initComponents();
        
        dbConnection = new DBProjectConnection();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        dropDownBox = new javax.swing.JComboBox();
        SelectQueryLabel = new javax.swing.JLabel();
        resultsArea = new javax.swing.JScrollPane();
        //resultsArea = new javax.swing.JTextArea();
        executeButton = new javax.swing.JButton();
        QueryResultsLabel = new javax.swing.JLabel();
        TotleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        /////////////
        //Add/Change menu items here
        /////////////
        
        dropDownBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ","Get List of Payments", "Get Agents and Tickets", "Get Tickets and Objects", "Get a Customer's Total Payment", "New Ticket", "Get Contact Info", "Get Customer Items", "Most Tickets by Agent", "Customers Who Have Tickets", "Select Resolved Tickets" }));

        SelectQueryLabel.setText("Select Query:");

        //resultsArea.setColumns(20);
        //resultsArea.setRows(5);
        //jScrollPane1.setViewportView(resultsArea);

        executeButton.setText("Execute Query");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });

        QueryResultsLabel.setText("Query Results:");

        TotleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TotleLabel.setText("Database Project");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultsArea, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dropDownBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(QueryResultsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(executeButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SelectQueryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 407, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(TotleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TotleLabel)
                .addGap(26, 26, 26)
                .addComponent(SelectQueryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dropDownBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(executeButton)
                    .addComponent(QueryResultsLabel))
                .addGap(4, 4, 4)
                .addComponent(resultsArea, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    	
    	//Switch over all posibilities for the dropdown
    	//call their respective methods in the dbConnection Object
    	switch ((String)dropDownBox.getSelectedItem()){
    	
    	case "Get List of Payments":
    		
    		resultsArea.setViewportView(dbConnection.getListOfPayments());
    		
    		break;
    		
		case "Get Agents and Tickets":
		    		
			resultsArea.setViewportView(dbConnection.getAgentsTickets());
		    		
    		break;
		    		
		case "Get Tickets and Objects":
						
			resultsArea.setViewportView(dbConnection.getTicketsandObjects());
			
			break;
			
		case "Get a Customer's Total Payment":
			
			resultsArea.setViewportView(dbConnection.getSumCustomerPayments());
			
			break;
			
		case "New Ticket":
			
			resultsArea.setViewportView(dbConnection.addTicket());
			
			break;
    	
    	
		case "Get Contact Info":
			
			resultsArea.setViewportView(dbConnection.getContactInfo());
			
			break;
			
		case "Get Customer Items":
			
			resultsArea.setViewportView(dbConnection.getCustomersItems());
			
			break;
			
    	
    	case "Most Tickets by Agent":
		
			resultsArea.setViewportView(dbConnection.mostTicketsByAgent());
			
			break;
			
    	case "Customers Who Have Tickets":
    		
			resultsArea.setViewportView(dbConnection.customerHasTickets());

    		
    		break;
    		
    	case "Select Resolved Tickets":
    		
			resultsArea.setViewportView(dbConnection.allResolvedTickets());
    		
    		break;
		
		}//end switch
    	
    	
    	
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBProjectGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBProjectGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBProjectGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBProjectGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBProjectGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel QueryResultsLabel;
    private javax.swing.JLabel SelectQueryLabel;
    private javax.swing.JLabel TotleLabel;
    private javax.swing.JComboBox dropDownBox;
    private javax.swing.JButton executeButton;
    private javax.swing.JScrollPane resultsArea;
   // private javax.swing.JTextArea resultsArea;
    
    
    private DBProjectConnection dbConnection;
    // End of variables declaration                   
}
